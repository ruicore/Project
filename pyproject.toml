[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "template"
authors = [{ name = "Rui HE", email = "daniel.saturday@icloud.com" }]
readme = "README.md"
license = { file = "LICENSE" }
classifiers = ["License :: OSI Approved :: MIT License"]
dynamic = ["version"]
requires-python = ">=3.10"


[project.optional-dependencies]
development = ["black", "isort", "mypy", "pre-commit", "pyright", "pylint"]

[tool.pyright]
exclude = [
    ".venv",
    "venv",
    ".git",
    "**/.mypy_cache",
    "**/__pycache__",
    "**/.pytest_cache",
]
ignore = ["pands"]
enableTypeIgnoreComments = false
reportUnusedFunction = false
typeCheckingMode = "strict"
reportUnusedImport = false
reportMissingTypeStubs = false
reportUnknownVariableType = false


extension-pkg-whitelist = ["pydantic", 'pendulum']

[tool.pylint.basic]
attr-rgx = "^[_a-z][a-z0-9_]*$"        # snake_case
variable-rgx = "^[_a-z][a-z0-9_]*$"    # snake_case
argument-rgx = "^[_a-z][a-z0-9_]*$"    # snake_case
class-rgx = "^(_?[A-Z][a-zA-Z0-9]*)*$"
method-rgx = "^[_a-z][a-z0-9_]*$"      # snake_case


[tool.pylint.'MESSAGES CONTROL']
disable = [
    "missing-module-docstring",
    "missing-function-docstring",
    "missing-class-docstring",
    "too-many-instance-attributes",
    "too-many-arguments",
    "too-few-public-methods",
    "too-many-public-methods",
    "no-else-return",
    "no-else-raise",
    "fixme",
    "duplicate-code",
    "redefined-builtin",
    "broad-except",
    "abstract-class-instantiated"
]


[tool.pylint.'MASTER']
jobs = 4
score = false
ignore-paths = [
    ".git/",
    "venv/",
    ".venv/",
    ".mypy_cache/",
    "__pycache__/",
    ".pytest_cache/",
]


[tool.black]
line-length = 120
skip-string-normalization = true


[tool.pylint.'FORMAT']
max-line-length = 120
max-positional-arguments = 6

[tool.isort]
skip_gitignore = true
profile = "black"
line_length = 120
indent = '    '
no_lines_before = 'LOCALFOLDER'
force_single_line = false

[tool.mypy]
ignore_missing_imports = true
